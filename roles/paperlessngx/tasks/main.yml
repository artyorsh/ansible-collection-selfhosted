---
- name: "Prepare task variables"
  ansible.builtin.set_fact:
    paperlessngx_service_id: "paperlessngx"
    paperlessngx_docker_settings: "{{ paperlessngx_docker_settings_default | combine(paperlessngx_docker_settings, recursive=true) }}"

- name: "Make sure config directories exist"
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: "directory"
    mode: "0774"
  loop:
    - "{{ paperlessngx_install_dir }}"
    - "{{ paperlessngx_consume_dir }}"
    - "{{ paperlessngx_media_dir }}"
    - "{{ paperlessngx_export_dir }}"

- name: "Ensure {{ paperlessngx_docker_settings.network }} network exists"
  when: paperlessngx_docker_settings.network != "host"
  community.general.docker_network:
    name: "{{ paperlessngx_docker_settings.network }}"
    state: "present"

- name: "Run redis container"
  community.general.docker_container:
    name: "{{ paperlessngx_service_id }}-redis"
    image: "redis:{{ paperlessngx_redis_version }}"
    networks:
      - name: "{{ paperlessngx_docker_settings.network }}"
    restart_policy: "always"

- name: "Run app container"
  community.general.docker_container:
    name: "{{ paperlessngx_service_id }}"
    image: "ghcr.io/paperless-ngx/paperless-ngx:{{ paperlessngx_version }}"
    networks:
      - name: "{{ paperlessngx_docker_settings.network }}"
    state: "started"
    healthcheck: "{{ paperlessngx_docker_settings.healthcheck }}"
    env: "{{ paperlessngx_env_default | combine(paperlessngx_env) }}"
    ports:
      - "{{ paperlessngx_port }}:8000"
    volumes:
      - "{{ paperlessngx_install_dir }}/data:/usr/src/paperless/data"
      - "{{ paperlessngx_media_dir }}:/usr/src/paperless/media"
      - "{{ paperlessngx_export_dir }}:/usr/src/paperless/export"
      - "{{ paperlessngx_consume_dir }}:/usr/src/paperless/consume"
    restart_policy: "unless-stopped"
