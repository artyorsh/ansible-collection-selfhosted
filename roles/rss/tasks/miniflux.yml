---
# https://miniflux.app/docs/docker.html#docker-compose

- name: "Prepare task variables"
  ansible.builtin.set_fact:
    rss_miniflux_service_id: "miniflux"

- name: "Make sure config directories exist"
  ansible.builtin.file:
    path: "{{ rss_miniflux_install_dir }}/db"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: "directory"
    mode: "0774"

- name: "Run app container"
  community.general.docker_container:
    name: "{{ rss_miniflux_service_id }}"
    image: "miniflux/miniflux:{{ rss_miniflux_version }}"
    networks:
      - name: "{{ rss_docker_settings.network }}"
    state: "started"
    healthcheck: "{{ rss_docker_settings.healthcheck }}"
    env: "{{ rss_miniflux_env_default | combine(rss_miniflux_env) }}"
    ports:
      - "{{ rss_miniflux_webui_port }}:8080"
    restart_policy: "unless-stopped"

- name: "Run db container"
  community.general.docker_container:
    name: "{{ rss_miniflux_service_id }}-db"
    image: "postgres:{{ rss_miniflux_postgres_version }}"
    networks:
      - name: "{{ rss_docker_settings.network }}"
    state: "started"
    env: "{{ rss_miniflux_postgres_env_default | combine(rss_miniflux_postgres_env) }}"
    volumes:
      - "{{ rss_miniflux_install_dir }}/db:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: "10s"
      start_period: "30s"
    restart_policy: "unless-stopped"
