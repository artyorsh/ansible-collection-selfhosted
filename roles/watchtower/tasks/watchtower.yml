---
- name: "Prepare task variables"
  ansible.builtin.set_fact:
    watchtower_service_id: "watchtower"
    watchtower_http_port: 80
    watchtower_https_port: 443
    watchtower_docker_settings: "{{ watchtower_docker_settings_default | combine(watchtower_docker_settings, recursive=true) }}"

- name: "Make sure {{ watchtower_docker_settings.network }} docker network exists"
  when: watchtower_docker_settings.network != "host"
  community.general.docker_network:
    name: "{{ watchtower_docker_settings.network }}"
    state: "present"

- name: "Make sure config directory exists"
  ansible.builtin.file:
    path: "{{ watchtower_install_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: "directory"
    mode: "0774"

- name: "Template config.json"
  ansible.builtin.copy:
    content: "{{ watchtower_config_json_as_yaml | to_nice_json }}"
    dest: "{{ watchtower_install_dir }}/config.json"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"

- name: "Run watchtower container"
  community.general.docker_container:
    name: "{{ watchtower_service_id }}"
    image: "containrrr/watchtower:{{ watchtower_version }}"
    networks:
      - name: "{{ watchtower_docker_settings.network }}"
    state: "started"
    healthcheck: "{{ watchtower_docker_settings.healthcheck }}"
    env: "{{ watchtover_env_default | combine(watchtover_env) }}"
    ports:
      - "{{ watchtower_https_port }}:3443"
      - "{{ watchtower_http_port }}:3080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ watchtower_install_dir }}/config.json:/config.json"
    restart_policy: "unless-stopped"
